$version Generated by VerilatedVcd $end
$timescale 1ps $end
 $scope module TOP $end
  $scope module tb_immgen $end
   $var wire 32 # i_instr [31:0] $end
   $var wire 32 $ o_immgen [31:0] $end
   $scope module uut $end
    $var wire 32 # i_instr [31:0] $end
    $var wire 32 $ o_immgen [31:0] $end
    $var wire 5 % R_type [4:0] $end
    $var wire 5 & I_type [4:0] $end
    $var wire 5 ' S_type [4:0] $end
    $var wire 5 ( L_type [4:0] $end
    $var wire 5 ) SB_type [4:0] $end
    $var wire 5 * UL_type [4:0] $end
    $var wire 5 + UA_type [4:0] $end
    $var wire 5 , UJ_type [4:0] $end
    $var wire 5 - IJ_type [4:0] $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
b00000000000000000000000000110011 #
b00000000000000000000000000000000 $
b01100 %
b00100 &
b01000 '
b00000 (
b11000 )
b01101 *
b00101 +
b11011 ,
b11001 -
#10000
b11111110001100100000010010010011 #
b11111111111111111111111111100011 $
#20000
b00000010100101001010001000000011 #
b00000000000000000000000000101001 $
#30000
b00000000100100100010111010100011 #
b00000000000000000000000000011101 $
#40000
b11111110010001001000000111100011 #
b11111111111111111111111111100010 $
#50000
b00000010100100001001000000110111 #
b00000010100100001001000000000000 $
#60000
b00000010100000000000001001101111 #
b00000000000000100110111000000000 $
#70000
b00000010100100100000010011100111 #
b00000000000000000000000000101001 $
#80000
